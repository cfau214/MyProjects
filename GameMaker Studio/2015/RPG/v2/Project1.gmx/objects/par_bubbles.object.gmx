<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*  This variable is to prevent the bubble from being picked up immediately.
    It gives the player a second to see that a bubble dropped instead of
    instantly being absorbed by the player. It will be set true by timer[0].    */
active = false;
alarm[0] = 60;  // One second activation time per bubble.


/*  Randomize size of bubble to determine how strong the bubble is.
    The bubble's size determines how powerful the bubble is.    */
value = irandom(99);

/* Set bubble strength and size according to randomized value. The strength of
   each bubble is written as a percent. This allows the same code to be used for
   each type of bubble. For instance, is a restore_value is 0.4, this means that
   40% of that type of resource will be restored.   */

small = 0.10;   // 10%
medium = 0.20;  // 20%
large = 0.30;   // 30%
super = 0.40;   // 40%

// Small bubbles.  50% chance
if ( value &lt; 50 ) {
    image_xscale = 1;
    image_yscale = 1;
    restore_value = small;
}

// Medium bubbles. 30% chance
if ( value &gt;= 50 &amp;&amp; value &lt; 80 ) {
    image_xscale = 1.5;
    image_yscale = 1.5;
    restore_value = medium; 
}

// Large bubbles. 15% chance
if ( value &gt;= 80 &amp;&amp; value &lt; 95 ) {
    image_xscale = 2;
    image_yscale = 2;
    restore_value = large; 
}


// Super bubbles. 5% chance
if ( value &gt;= 95 &amp;&amp; value &lt; 100 ) {
    image_xscale = 2.5;
    image_yscale = 2.5;
    restore_value = super;
}
     
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;

// aggro radius
if ( abs(self.x - Player1.x ) &lt; 250 &amp;&amp; abs(self.y - Player1.y) &lt; 250 )
    move_towards_point(Player1.x, Player1.y, 10);    

// out of range radius
if ( abs(self.x - Player1.x) &gt;= 250 &amp;&amp; abs(self.y - Player1.y) &gt;= 250)
    speed = 0;

/* What happens when the bubble reaches the player is dependent on the type of bubble.
   This is coded inside of each of the individual bubble objects.   */
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
