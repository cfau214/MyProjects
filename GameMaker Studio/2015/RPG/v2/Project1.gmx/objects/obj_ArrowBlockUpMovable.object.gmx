<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ArrowBlockUp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_box</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y - 50

friction = 0.7;

left = false;
right = false;
up = false;
down = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_ArrowUp</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_ArrowBlockUp</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_ArrowBlockUp</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>160</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>402</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_collision</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( place_meeting(x, y, obj_interact) &amp;&amp; keyboard_check(control_array[7,1]) ) {

    Player1.movement_allow = false;         // Disable default player movement script.

    //////////// 
    // Left 
    ///////////
    if (keyboard_check(control_array[2,1]) &amp;&amp; 
        down == false &amp;&amp; 
        up == false &amp;&amp; 
        right == false &amp;&amp;           // Determine which side of box player is on.
        ( Player1.x  &lt; (x - sprite_xoffset) || Player1.x  &gt; (x + sprite_xoffset) )) {
        
            left = true;
        
            // Player
            with (Player1) {
                if !place_meeting(x - 15, y, obj_box) {
                    
                    hspeed -= player_accel_speed;       // Player acceleration on movement.
                                
                    // Limit speed to player's default move speed while moving objects.
                    if (hspeed &lt; -player_move_speed_action) 
                        hspeed = -player_move_speed_action;              
                }  
                else   
                    hspeed = 0;
            }
            
            // Object
            if !place_meeting(x - 15, y, obj_box) {
                
                hspeed -= Player1.player_accel_speed;   // Box acceleration on movement.
                            
                // Limit speed to player's default move speed while moving objects.
                if (hspeed &lt; -Player1.player_move_speed_action) 
                    hspeed = -Player1.player_move_speed_action;              
            }  
            else   
                hspeed = 0;    
    }
    else if keyboard_check_released(control_array[2,1])
        left = false;
    
    //////////// 
    // Right 
    ///////////
    else if (keyboard_check(control_array[3,1]) &amp;&amp; 
         down == false &amp;&amp; 
         up == false &amp;&amp; 
         left == false &amp;&amp;           // Determine which side of box player is on.
         ( Player1.x  &lt; (x - sprite_xoffset) || Player1.x  &gt; (x + sprite_xoffset) )) {
             
            right = true;
        
            // Player
            with (Player1) {
                if !place_meeting(x + 15, y, obj_box) {
                    
                    hspeed += player_accel_speed;       // Player acceleration on movement.
                                
                    // Limit speed to player's default move speed while moving objects.
                    if (hspeed &gt; player_move_speed_action) 
                        hspeed = player_move_speed_action;              
                }  
                else   
                    hspeed = 0;
            }
            
            // Object
            if !place_meeting(x + 15, y, obj_box) {
                
                hspeed += Player1.player_accel_speed;   // Box acceleration on movement.
                            
                // Limit speed to player's default move speed while moving objects.
                if (hspeed &gt; Player1.player_move_speed_action) 
                    hspeed = Player1.player_move_speed_action;              
            }  
            else   
                hspeed = 0;    
    }
    else if keyboard_check_released(control_array[3,1])
        right = false;
    
    //////////// 
    // Up 
    ///////////
    else if (keyboard_check(control_array[0,1]) &amp;&amp; 
         left == false &amp;&amp; 
         right == false &amp;&amp; 
         down == false &amp;&amp;           // Determine which side of box player is on.
         ( Player1.y  &lt; (y - sprite_yoffset) || Player1.y  &gt; (y + sprite_yoffset) )) {
             
            up = true;
        
            // Player
            with (Player1) {
                if !place_meeting(x, y - 15, obj_box) {
                    
                    vspeed -= player_accel_speed;       // Player acceleration on movement.
                                
                    // Limit speed to player's default move speed while moving objects.
                    if (vspeed &lt; -player_move_speed_action) 
                        vspeed = -player_move_speed_action;              
                }  
                else   
                    vspeed = 0;
            }
            
            // Object
            if !place_meeting(x, y - 15, obj_box) {
                
                vspeed -= Player1.player_accel_speed;   // Box acceleration on movement.
                            
                // Limit speed to player's default move speed while moving objects.
                if (vspeed &lt; -Player1.player_move_speed_action) 
                    vspeed = -Player1.player_move_speed_action;              
            }  
            else   
                vspeed = 0;    
    }
    else if keyboard_check_released(control_array[0,1])
        up = false;
    
    //////////// 
    // Down 
    ///////////
    else if (keyboard_check(control_array[1,1]) &amp;&amp; 
         left == false &amp;&amp; 
         right == false &amp;&amp; 
         up == false &amp;&amp;             // Determine which side of box player is on.
         ( Player1.y  &lt; (y - sprite_yoffset) || Player1.y  &gt; (y + sprite_yoffset) )) {
             
            down = true;
        
            // Player
            with (Player1) {
                if !place_meeting(x, y + 15, obj_box) {
                    
                    vspeed += player_accel_speed;       // Player acceleration on movement.
                                
                    // Limit speed to player's default move speed while moving objects.
                    if (vspeed &gt; player_move_speed_action) 
                        vspeed = player_move_speed_action;              
                }  
                else   
                    vspeed = 0;
            }
            
            // Object
            if !place_meeting(x, y + 15, obj_box) {
                
                vspeed += Player1.player_accel_speed;   // Box acceleration on movement.
                            
                // Limit speed to player's default move speed while moving objects.
                if (vspeed &gt; Player1.player_move_speed_action) 
                    vspeed = Player1.player_move_speed_action;              
            }      
            else   
                vspeed = 0;    
    }
    else if keyboard_check_released(control_array[1,1])
        down = false;
}
else    // Give player movement access back to original movement script.
    Player1.movement_allow = true;      
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
